{"ast":null,"code":"import _regeneratorRuntime from \"/Users/jonathanhigger/ThrowAway/nextdemo/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/jonathanhigger/ThrowAway/nextdemo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jonathanhigger/ThrowAway/nextdemo/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../Components/layout';\nimport { useEffect, useState } from 'react';\nimport CharactersContainer from '../Components/CharactersContainer';\n\nvar Index = function Index(props) {\n  _s();\n\n  var _useState = useState(0),\n      count = _useState[0],\n      setCount = _useState[1];\n\n  var _useState2 = useState([]),\n      characters = _useState2[0],\n      setCharacters = _useState2[1];\n\n  useEffect(function () {\n    fetch('https://rickandmortyapi.com/api/character').then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return setCharacters(data.results);\n    });\n  }, []);\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, \"Your count is: \", count), __jsx(\"button\", {\n    onClick: function onClick() {\n      return setCount(count + 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \"+\"), __jsx(CharactersContainer, {\n    characters: props.characters,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(Index, \"uSdKMBvQhi+5N+w1M4SNSQzEwRo=\");\n\n_c = Index;\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n    var response, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('https://rickandmortyapi.com/api/character');\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            data = _context.sent;\n            return _context.abrupt(\"return\", {\n              characters: data.results\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/jonathanhigger/ThrowAway/nextdemo/pages/index.js"],"names":["Layout","useEffect","useState","CharactersContainer","Index","props","count","setCount","characters","setCharacters","fetch","then","response","json","data","results","getInitialProps"],"mappings":";;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAEC,KAAF,EAAa;AAAA;;AAAA,kBACGH,QAAQ,CAAC,CAAD,CADX;AAAA,MAChBI,KADgB;AAAA,MACTC,QADS;;AAAA,mBAEaL,QAAQ,CAAC,EAAD,CAFrB;AAAA,MAEhBM,UAFgB;AAAA,MAEJC,aAFI;;AAIvBR,EAAAA,SAAS,CAAC,YAAM;AACZS,IAAAA,KAAK,CAAC,2CAAD,CAAL,CACKC,IADL,CACU,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADlB,EAEKF,IAFL,CAEU,UAAAG,IAAI;AAAA,aAAIL,aAAa,CAAEK,IAAI,CAACC,OAAP,CAAjB;AAAA,KAFd;AAGH,GAJQ,EAIN,EAJM,CAAT;AAOA,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAoBT,KAApB,CADJ,EAEI;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAd;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,EAGI,MAAC,mBAAD;AAAqB,IAAA,UAAU,EAAED,KAAK,CAACG,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH,CAlBD;;GAAMJ,K;;KAAAA,K;;AAoBNA,KAAK,CAACY,eAAN;AAAA,sEAAwB,iBAAQX,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACGK,KAAK,CAAC,2CAAD,CADR;;AAAA;AACdE,YAAAA,QADc;AAAA;AAAA,mBAGDA,QAAQ,CAACC,IAAT,EAHC;;AAAA;AAGdC,YAAAA,IAHc;AAAA,6CAKb;AACHN,cAAAA,UAAU,EAAEM,IAAI,CAACC;AADd,aALa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAUA,eAAeX,KAAf","sourcesContent":["import Layout from '../Components/layout'\nimport {useEffect, useState} from 'react'\nimport CharactersContainer from '../Components/CharactersContainer'\n\nconst Index = ( props ) => {\n    const [count, setCount] = useState(0)\n    const [characters, setCharacters] = useState([])\n\n    useEffect(() => {\n        fetch('https://rickandmortyapi.com/api/character')\n            .then(response => response.json())\n            .then(data => setCharacters( data.results ))\n    }, [])\n\n\n    return (\n        <Layout>\n            <h1>Your count is: {count}</h1>\n            <button onClick={() => setCount(count + 1) }>+</button>\n            <CharactersContainer characters={props.characters}/>\n        </Layout>\n    )\n}\n\nIndex.getInitialProps = async ( props ) => {\n    const response = await fetch('https://rickandmortyapi.com/api/character')\n\n    const data = await response.json()\n\n    return {\n        characters: data.results\n    };\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}